
use clap::{App, Arg, SubCommand};

pub fn build_cli() -> App<'static, 'static> {
    App::new("gpxanalyzer")
        .version("0.1.0")
        .about("Various manipulation with GPX file(s)")
        .subcommand(SubCommand::with_name("info")
            .about("Show info about a GPX")
            .arg(Arg::with_name("gpx-file")
                .short("f")
                .long("file")
                .value_name("FILE")
                .help("GPX file to analyze")
                .takes_value(true)
                .required(true)))
        .subcommand(SubCommand::with_name("analyze")
            .about("Compute best distance and/or best time legs")
            .arg(Arg::with_name("gpx-file")
                .short("f")
                .long("file")
                .value_name("FILE")
                .help("GPX file to analyze")
                .takes_value(true)
                .required(true))
            .arg(Arg::with_name("distance")
                .short("d")
                .long("distance")
                .value_name("DISTANCE_THRESHOLD")
                .help("Find best time for this distance in meters")
                .takes_value(true))
            .arg(Arg::with_name("time")
                .short("t")
                .long("time")
                .value_name("TIME_THRESHOLD")
                .help("Find best distance for this time in seconds")
                .takes_value(true)
                .required_unless("distance")))
        .subcommand(SubCommand::with_name("merge")
            .about("Merge multiple GPX sorted by start date into a single one")
            .arg(Arg::with_name("gpx-files")
                .short("f")
                .long("files")
                .value_name("FILES")
                .help("GPX files to merge")
                .takes_value(true)
                .multiple(true)
                .required(true))
            .arg(Arg::with_name("output-file")
                .short("o")
                .long("output")
                .value_name("OUTPUT")
                .help("GPX result file")
                .takes_value(true)
                .default_value("output.gpx")))

}
